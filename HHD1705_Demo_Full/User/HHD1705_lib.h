/*******************************************************************************************************
  * Company: Hiwafer Technology Co., Ltd.
  ******************************************************************************************************
  * 文件名称：HHD1705_lib.h
  * 功能说明：
  * 版    本：V1.0
  * 作    者：EnderWigg	
  * 日    期：2019.3.12
  *
  * 该文件用于配置库文件相关功能
  * 约定：“x” 标记表示取消该宏的定义，例如 不启用CAN1，xCFG_USING_CAN1
*******************************************************************************************************/
#ifndef __HHD1705_LIB_H__
#define __HHD1705_LIB_H__
#include "hhd32f10x_conf.h"


#define COMPILE_TO_LIB		/* 如果需要将该工程编译成库，必须使能该宏
								如果编译为直接烧写，则不需要定义该宏*/
							
#define MII_MODE           	/* MII mode  (走调试网口) */
#define xMII_TO_SGMII	   	/* MII to SGMII 功能 (走交换机)*/ 
#define xBUG_GMII_TO_SGMII 	/* 是否监视交换机状态，不是必须要启用*/
#define ETH_100M 		   	/* 确定网口速度，如果定义该宏，网口速度将被配置为100M，否则为10M*/
#define CFG_SYS_60MHZ 		/* 指定系统主频 60MHz*/
#define xCFG_SYS_50MHZ		/* 指定系统主频 50MHz*/

#define CFG_USING_LED_BLINK /* 是否闪烁LED状态灯*/
#define CFG_USING_CAN1      /* 使用CAN1接口*/
#define CFG_USING_NET		/* 使用网络*/
#define CFG_USING_SPI		/* 使用SPI接口*/
// SPI 引脚选择
#define xCFG_SELECT_SPI_IO_0	/* 使用 PC9，PC10，PC11， PC12*/
#define CFG_SELECT_SPI_IO_1	    /* 使用 PC7，PC8，PC10， PC11,  该模式支持访问4片FPGA*/

// 设备默认IP
#define IP_0			192
#define IP_1			168
#define IP_2			2
#define IP_3			198
// FPGA 固化功能 默认选择的FPGA

#ifdef CFG_SELECT_SPI_IO_1 
	#define FPGA0			0
	#define FPGA1			1
	#define FPGA2			2
	#define FPGA3			3
#else
#define FPGA0			0
#define FPGA1			0
#define FPGA2			0
#define FPGA3			0
#endif


#define DEF_ACCESS_FPGA	FPGA0 

/******************************************依赖条件检查***************************************************/

#ifdef MII_TO_SGMII		  //使用MII to SGMII 必须启用MII
	#ifndef MII_MODE
		#define MII_MODE
	#endif
#endif

#ifdef CFG_USING_NET
	#ifdef CFG_USING_SPI
		#define CFG_USING_LOAD			 // 使用FPGA远程固化网络服务器， （该功能需要依赖 网络和SPI）
	#endif
	#define CFG_USING_XVC				 // 使用FPGA远程调试网络服务器
#endif


#ifdef CFG_USING_CAN1
	#define CFG_USING_CAN1_WRITE_BACK	//MCU将通过CAN1回显收到的数据		
#endif





///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//												API															 //
///////////////////////////////////////////////////////////////////////////////////////////////////////////////


/**************************************************************************************************************
*
*系统基础功能初始化
*
***************************************************************************************************************/
void base_init(void);

/**************************************************************************************************************
*
*	基于SysTick的延时
*
**************************************************************************************************************/
void Delay(uint32_t nCount);

/**************************************************************************************************************
*
*	获取SysTick的当前值
*
**************************************************************************************************************/

  uint32_t Get_Tick(void);
  
  
  
  
///////////////////////////////////////////////CAN/////////////////////////////////////////////////////////////

/**************************************************************************************************************
*
*CAN 接口初始化
*
***************************************************************************************************************/
void can_init(HHD32F1_CAN_TypeDef *can, EN_BAUD baud, uint32_t filterID, uint32_t mask);

/**************************************************************************************************************
*
* 通过can 接口发送一帧数据
*
***************************************************************************************************************/
int CAN_Transmit(HHD32F1_CAN_TypeDef *can, CanTxMsg *TxMessage);

/**************************************************************************************************************
*
* 通过can 接口接收一帧数据
*
* 其中 FIFONumber 参数未使用
***************************************************************************************************************/
int CAN_Receive(HHD32F1_CAN_TypeDef *can, uint8_t FIFONumber, CanRxMsg* RxMessage);



/////////////////////////////////////////////////SPI////////////////////////////////////////////////////////////

/**************************************************************************************************************
*
*	初始化 SPI接口
*
***************************************************************************************************************/
void spi_Init(void);


/**************************************************************************************************************
*
*	写数据到FPGA
*
***************************************************************************************************************/
int SPI_To_FPGA_Wirte(uint8_t fpga, uint8_t addr, uint8_t *data, int len);

/**************************************************************************************************************
*
*	连续从FPGA读回数据
*
***************************************************************************************************************/
int SPI_To_FPGA_Read(uint8_t fpga, uint8_t addr, uint8_t *data, int len);


#endif


